/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfacesGraficas;

import ClassesAtributo.Aluno;
import ClassesAtributo.Biblioteca;
import ClassesAtributo.Documento;
import ClassesAtributo.Livro;
import ClassesAtributo.Periodico;
import ClassesAtributo.Usuario;
import java.util.Calendar;

/**
 *
 * @author Guilherme Cabral
 */
public class MenuConfirmacaoEmprestimo extends javax.swing.JFrame {

    /**
     * Creates new form MenuConfirmaçãoEmprestimo
     */
    public MenuConfirmacaoEmprestimo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labNomeUser = new javax.swing.JLabel();
        labIDUser = new javax.swing.JLabel();
        labNomeDoc = new javax.swing.JLabel();
        labIDDoc = new javax.swing.JLabel();
        labDevolucao = new javax.swing.JLabel();
        labNomeUser2 = new javax.swing.JLabel();
        labIDUser2 = new javax.swing.JLabel();
        labNomeDoc2 = new javax.swing.JLabel();
        labIDDoc2 = new javax.swing.JLabel();
        labDevolucao2 = new javax.swing.JLabel();
        butConfirmar = new javax.swing.JButton();
        butCancelar = new javax.swing.JButton();

        setTitle("Confirmação Empréstimo");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        labNomeUser.setText("Nome Usuário:");

        labIDUser.setText("ID Usuário:");

        labNomeDoc.setText("Nome Documento:");

        labIDDoc.setText("ID Documento:");

        labDevolucao.setText("Devolução:");

        butConfirmar.setText("Confirmar");
        butConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butConfirmarActionPerformed(evt);
            }
        });

        butCancelar.setText("Cancelar");
        butCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labNomeUser, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labIDUser, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labNomeDoc, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labDevolucao, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labIDDoc, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labDevolucao2)
                    .addComponent(labIDDoc2)
                    .addComponent(labNomeDoc2)
                    .addComponent(labIDUser2)
                    .addComponent(labNomeUser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(70, 70, 70))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(butConfirmar)
                .addGap(50, 50, 50)
                .addComponent(butCancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labNomeUser)
                    .addComponent(labNomeUser2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labIDUser)
                    .addComponent(labIDUser2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labNomeDoc)
                    .addComponent(labNomeDoc2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labIDDoc)
                    .addComponent(labIDDoc2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labDevolucao)
                    .addComponent(labDevolucao2))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butCancelar)
                    .addComponent(butConfirmar))
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void butCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCancelarActionPerformed
        // Fecha a janela de confirmação.
        dispose();
    }//GEN-LAST:event_butCancelarActionPerformed

    private void butConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butConfirmarActionPerformed
        
        Usuario user = Biblioteca.user(Biblioteca.getIDAuxiliar());
        Documento doc = Biblioteca.doc(Biblioteca.getIDAuxiliar2());
        
        boolean error = false;
        String erro = "";
        
        switch (getTitle())
        {
            case "Confirmação Empréstimo":
                if ((user.getDivida()+user.getDividaDocAtuais()) == 0)
                {
                    if(doc instanceof Livro || doc instanceof Periodico)
                    {
                        if (doc.getQuantidade() > 0)
                        {
                            if (user.testaDoc(labIDDoc2.getText()) == false)
                            {
                                if (user instanceof Aluno)
                                {
                                    if (user.getQuantiaDoc() < 3)
                                    {
                                        retirarDocumento(user, doc);                                                                           }
                                    else
                                    {
                                        erro = "O Usuário já atingiu o limite de documentos retirados.";
                                        error = true;
                                    }
                                }
                                else
                                {
                                    if (user.getQuantiaDoc() < 5)
                                    {
                                        retirarDocumento(user, doc);
                                    }
                                    else
                                    {
                                        erro = "O Usuário já atingiu o limite de documentos retirados.";
                                        error = true;
                                    }
                                }
                            }
                            else
                            {
                                erro = "O Usuário já retirou este exemplar.";
                                error = true;
                            }
                        }
                        else
                    {
                        erro = "Não há exemplares no estoque.";
                        error = true;
                    }
                    }
                    else
                    {
                        erro = "O Documento é apenas para consulta local.";
                        error = true;
                    }
                }
                else
                {
                    erro = "O Usuário tem uma dívida pendente: R$ " +(user.getDivida()+user.getDividaDocAtuais());
                    error = true;
                }
                break;
            
            case "Confirmação Consulta":
                if (user.getDivida() + user.getDividaDocAtuais() == 0)
                {                    
                    if (doc.getQuantidade() > 0)
                    {
                        if (user.testaDoc(labIDDoc2.getText()) == false)
                        {
                            if (user instanceof Aluno)
                            {
                                if (user.getQuantiaDoc() < 3)
                                {
                                    retirarDocumento(user, doc);                                                                           }
                                else
                                {
                                    erro = "O Usuário já atingiu o limite de documentos retirados.";
                                    error = true;
                                }
                            }
                            else
                            {
                                if (user.getQuantiaDoc() < 5)
                                {
                                    retirarDocumento(user, doc);
                                }
                                else
                                {
                                    erro = "O Usuário já atingiu o limite de documentos retirados.";
                                    error = true;
                                }
                            }
                        }
                        else
                        {
                            erro = "O Usuário já retirou este exemplar.";
                            error = true;
                        }
                    }
                    else
                    {
                        erro = "Não há exemplares no estoque.";
                        error = true;
                    }                    
                }
                else
                {
                    erro = "O Usuário tem uma dívida pendente: " +user.getDivida();
                    error = true;
                }
                break;
                
            case "Confirmação Devolução":
                if (user.testaDoc(labIDDoc2.getText()) == true)
                        {
                            devolverDocumento(user, doc);
                        }
                        else
                        {
                            erro = "O Usuário não retirou este exemplar.";
                            error = true;
                        }
        }
        
        if (error == true)
        {
            TelaErro msgErro = new TelaErro();
            msgErro.setTextLabErro(erro);
            msgErro.pack();
            msgErro.setLocationRelativeTo(null);
            msgErro.setVisible(true);
            dispose();
        }
        else
        {
            dispose();
        }
    }//GEN-LAST:event_butConfirmarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuConfirmacaoEmprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuConfirmacaoEmprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuConfirmacaoEmprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuConfirmacaoEmprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuConfirmacaoEmprestimo().setVisible(true);
            }
        });
    }
    
    public void setLabNomeUser(String s)
    {
        labNomeUser2.setText(s);
    }
    public void setLabIDUser(String s)
    {
        labIDUser2.setText(s);
    }
    public void setLabNomeDoc(String s)
    {
        labNomeDoc2.setText(s);
    }
    public void setLabIDDoc(String s)
    {
        labIDDoc2.setText(s);
    }
    public void setLabDevolucao(String s)
    {
        labDevolucao2.setText(s);
    }

    public void setBut(String s)
    {
        butConfirmar.setText(s);
    }
    
    public void retirarDocumento(Usuario user, Documento doc)
    {
        Calendar devolucao = Calendar.getInstance();
        if (user instanceof Aluno)
        {
            devolucao.add(Calendar.DAY_OF_YEAR, 7);
        }
        else
        {
            devolucao.add(Calendar.DAY_OF_YEAR, 15);
        }
        user.setDocs(doc.getID(), devolucao);
        doc.setQuantidade(doc.getQuantidade()-1);        
    }
    public void devolverDocumento(Usuario user, Documento doc)
    {
        if (user.getDividaDocAtuais() > 0)
        {
            user.setDivida(user.getDividaDocAtuais());
        }
        user.removerDoc(doc.getID());
        doc.setQuantidade(doc.getQuantidade()+1);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butCancelar;
    private javax.swing.JButton butConfirmar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labDevolucao;
    private javax.swing.JLabel labDevolucao2;
    private javax.swing.JLabel labIDDoc;
    private javax.swing.JLabel labIDDoc2;
    private javax.swing.JLabel labIDUser;
    private javax.swing.JLabel labIDUser2;
    private javax.swing.JLabel labNomeDoc;
    private javax.swing.JLabel labNomeDoc2;
    private javax.swing.JLabel labNomeUser;
    private javax.swing.JLabel labNomeUser2;
    // End of variables declaration//GEN-END:variables

    }
